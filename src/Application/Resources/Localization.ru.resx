<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="languageState" xml:space="preserve">
    <value>ru</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Добавить</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Редактировать</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Удалить</value>
  </data>
  <data name="Detail" xml:space="preserve">
    <value>Детали</value>
  </data>
  <data name="Incidents" xml:space="preserve">
    <value>Инциденты</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>Пользователи</value>
  </data>
  <data name="Sorry" xml:space="preserve">
    <value>Извините</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Вход</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Имя пользователя</value>
  </data>
  <data name="Input" xml:space="preserve">
    <value>Введите</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Пароль</value>
  </data>
  <data name="Show" xml:space="preserve">
    <value>Показать</value>
  </data>
  <data name="FullName" xml:space="preserve">
    <value>Полное имя</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Электронная почта</value>
  </data>
  <data name="IsEnabled" xml:space="preserve">
    <value>Активирован</value>
  </data>
  <data name="Roles" xml:space="preserve">
    <value>Роли</value>
  </data>
  <data name="Choose" xml:space="preserve">
    <value>Выберите</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Сохранить</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Отменить</value>
  </data>
  <data name="CreateUser" xml:space="preserve">
    <value>Создать пользователя</value>
  </data>
  <data name="EditUser" xml:space="preserve">
    <value>Редактировать пользователя</value>
  </data>
  <data name="Created" xml:space="preserve">
    <value>Созданный</value>
  </data>
  <data name="LastModifiedBy" xml:space="preserve">
    <value>Последние изменения от</value>
  </data>
  <data name="LastModified" xml:space="preserve">
    <value>Последние изменения</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>Пользователь</value>
  </data>
  <data name="SureMessageDelete" xml:space="preserve">
    <value> Вы уверены, что хотите удалить это?</value>
  </data>
  <data name="Processing" xml:space="preserve">
    <value>Обработка...</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Поиск</value>
  </data>
  <data name="Info" xml:space="preserve">
    <value>Показаны записи с _START_ по _END_ из _TOTAL_</value>
  </data>
  <data name="LengthMenu" xml:space="preserve">
    <value>Показать _MENU_ записей на странице</value>
  </data>
  <data name="InfoEmpty" xml:space="preserve">
    <value>Записи отсутствуют</value>
  </data>
  <data name="InfoFiltered" xml:space="preserve">
    <value>(отфильтровано из _MAX_ записей)</value>
  </data>
  <data name="LoadingRecords" xml:space="preserve">
    <value>Загрузка...</value>
  </data>
  <data name="ZeroRecords" xml:space="preserve">
    <value>Записи отсутствуют</value>
  </data>
  <data name="EmptyTable" xml:space="preserve">
    <value>Таблица пуста</value>
  </data>
  <data name="First" xml:space="preserve">
    <value>Первое</value>
  </data>
  <data name="Previous" xml:space="preserve">
    <value>Предыдущая</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Следующая</value>
  </data>
  <data name="Last" xml:space="preserve">
    <value>Последняя</value>
  </data>
  <data name="RequestNr" xml:space="preserve">
    <value>Номер запроса</value>
  </data>
  <data name="Subsystem" xml:space="preserve">
    <value>Подсистема</value>
  </data>
  <data name="OpenDate" xml:space="preserve">
    <value>Дата открытия</value>
  </data>
  <data name="CloseDate" xml:space="preserve">
    <value>Дата закрытия</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Тип</value>
  </data>
  <data name="Urgency" xml:space="preserve">
    <value>Срочность</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Создать</value>
  </data>
  <data name="Incident" xml:space="preserve">
    <value>Инцидент</value>
  </data>
  <data name="ApplicationType" xml:space="preserve">
    <value>Тип приложения</value>
  </data>
  <data name="SubCause" xml:space="preserve">
    <value>Подпричина</value>
  </data>
  <data name="ProblemSummary" xml:space="preserve">
    <value>Краткое описание проблемы</value>
  </data>
  <data name="Solution" xml:space="preserve">
    <value>Решение</value>
  </data>
  <data name="ProblemDescription" xml:space="preserve">
    <value>Описание проблемы</value>
  </data>
  <data name="Origin" xml:space="preserve">
    <value>Источник</value>
  </data>
  <data name="Ambit" xml:space="preserve">
    <value>Область</value>
  </data>
  <data name="IncidentType" xml:space="preserve">
    <value>Тип инцидента</value>
  </data>
  <data name="ThirdParty" xml:space="preserve">
    <value>Третья сторона</value>
  </data>
  <data name="Scenary" xml:space="preserve">
    <value>Сценарий</value>
  </data>
  <data name="Threat" xml:space="preserve">
    <value>Угроза</value>
  </data>
  <data name="Example" xml:space="preserve">
    <value>Пример</value>
  </data>
  <data name="Import" xml:space="preserve">
    <value>Импорт</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>Экспорт в CSV</value>
  </data>
  <data name="ChooseCSV" xml:space="preserve">
    <value>Выберите файл CSV для импорта</value>
  </data>
  <data name="StartWith" xml:space="preserve">
    <value>Начать с</value>
  </data>
  <data name="ErrorTryAgain" xml:space="preserve">
    <value>Пожалуйста, попробуйте снова</value>
  </data>
  <data name="ErrorAccount1" xml:space="preserve">
    <value>Этот пользователь не существует или был введен с ошибкой</value>
  </data>
  <data name="ErrorUser1" xml:space="preserve">
    <value>Этот пользователь уже существует(Имя пользователя или почта уже используется)</value>
  </data>
  <data name="ErrorCorrectData" xml:space="preserve">
    <value>Пожалуйста, укажите правильные данные</value>
  </data>
  <data name="ErrorUser2" xml:space="preserve">
    <value>Не удалось удалить пользователя.</value>
  </data>
  <data name="ErrorIncident1" xml:space="preserve">
    <value>Этот инцидент уже существует.</value>
  </data>
  <data name="SignOut" xml:space="preserve">
    <value>Выход</value>
  </data>
  <data name="LoginPage" xml:space="preserve">
    <value>Страница входа</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Ошибка</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>Успех</value>
  </data>
</root>